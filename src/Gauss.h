
/* Reference : https://bitbucket.org/Epoxid/gputop/src/master/src/Gauss.h   */


#pragma once

//These weights and Pos are for the Cube [-1 +1]^3
REAL weight[27];
REAL EvalPos[27][3];

void GaussInit()
{
  // wieght = w1*w2*w3
  weight[0] = 0.1714677640603567;
  weight[1] = 0.2743484224965707;
  weight[2] = 0.1714677640603567,
  weight[3] = 0.2743484224965707;
  weight[4] = 0.4389574759945131;
  weight[5] = 0.2743484224965707;
  weight[6] = 0.1714677640603567;
  weight[7] = 0.2743484224965707;
  weight[8] = 0.1714677640603567;
  weight[9] = 0.2743484224965707;
  weight[10] = 0.4389574759945131;
  weight[11] = 0.2743484224965707;
  weight[12] = 0.4389574759945131;
  weight[13] = 0.7023319615912209;
  weight[14] = 0.4389574759945131;
  weight[15] = 0.2743484224965707;
  weight[16] = 0.4389574759945131;
  weight[17] = 0.2743484224965707;
  weight[18] = 0.1714677640603567;
  weight[19] = 0.2743484224965707;
  weight[20] = 0.1714677640603567;
  weight[21] = 0.2743484224965707;
  weight[22] = 0.4389574759945131;
  weight[23] = 0.2743484224965707;
  weight[24] = 0.1714677640603567;
  weight[25] = 0.2743484224965707;
  weight[26] = 0.1714677640603567;
  EvalPos[0][0] = -0.7745966692414835; EvalPos[0][1] = -0.7745966692414835; EvalPos[0][2] = -0.7745966692414835;    
  EvalPos[1][0] = -0.7745966692414835; EvalPos[1][1] = -0.7745966692414835; EvalPos[1][2] =  0.0000000000000000;
  EvalPos[2][0] = -0.7745966692414835; EvalPos[2][1] = -0.7745966692414835; EvalPos[2][2] =  0.7745966692414835;
  EvalPos[3][0] = -0.7745966692414835; EvalPos[3][1] =  0.0000000000000000; EvalPos[3][2] = -0.7745966692414835;
  EvalPos[4][0] = -0.7745966692414835; EvalPos[4][1] =  0.0000000000000000; EvalPos[4][2] =  0.0000000000000000;
  EvalPos[5][0] = -0.7745966692414835; EvalPos[5][1] =  0.0000000000000000; EvalPos[5][2] =  0.7745966692414835;
  EvalPos[6][0] = -0.7745966692414835; EvalPos[6][1] =  0.7745966692414835; EvalPos[6][2] = -0.7745966692414835;
  EvalPos[7][0] = -0.7745966692414835; EvalPos[7][1] =  0.7745966692414835; EvalPos[7][2] =  0.0000000000000000;
  EvalPos[8][0] = -0.7745966692414835; EvalPos[8][1] =  0.7745966692414835; EvalPos[8][2] =  0.7745966692414835;
  EvalPos[9][0] =  0.0000000000000000; EvalPos[9][1] = -0.7745966692414835; EvalPos[9][2] = -0.7745966692414835;
  EvalPos[10][0] = 0.0000000000000000; EvalPos[10][1] = -0.7745966692414835; EvalPos[10][2] =  0.0000000000000000;
  EvalPos[11][0] = 0.0000000000000000; EvalPos[11][1] = -0.7745966692414835; EvalPos[11][2] =  0.7745966692414835;
  EvalPos[12][0] = 0.0000000000000000; EvalPos[12][1] =  0.0000000000000000; EvalPos[12][2] = -0.7745966692414835;
  EvalPos[13][0] = 0.0000000000000000; EvalPos[13][1] =  0.0000000000000000; EvalPos[13][2] =  0.0000000000000000;
  EvalPos[14][0] = 0.0000000000000000; EvalPos[14][1] =  0.0000000000000000; EvalPos[14][2] =  0.7745966692414835;
  EvalPos[15][0] = 0.0000000000000000; EvalPos[15][1] =  0.7745966692414835; EvalPos[15][2] = -0.7745966692414835;
  EvalPos[16][0] = 0.0000000000000000; EvalPos[16][1] =  0.7745966692414835; EvalPos[16][2] =  0.0000000000000000;
  EvalPos[17][0] = 0.0000000000000000; EvalPos[17][1] =  0.7745966692414835; EvalPos[17][2] =  0.7745966692414835;
  EvalPos[18][0] = 0.7745966692414835; EvalPos[18][1] = -0.7745966692414835; EvalPos[18][2] = -0.7745966692414835;
  EvalPos[19][0] = 0.7745966692414835; EvalPos[19][1] = -0.7745966692414835; EvalPos[19][2] =  0.0000000000000000;
  EvalPos[20][0] = 0.7745966692414835; EvalPos[20][1] = -0.7745966692414835; EvalPos[20][2] =  0.7745966692414835;
  EvalPos[21][0] = 0.7745966692414835; EvalPos[21][1] =  0.0000000000000000; EvalPos[21][2] = -0.7745966692414835;
  EvalPos[22][0] = 0.7745966692414835; EvalPos[22][1] =  0.0000000000000000; EvalPos[22][2] =  0.0000000000000000;
  EvalPos[23][0] = 0.7745966692414835; EvalPos[23][1] =  0.0000000000000000; EvalPos[23][2] =  0.7745966692414835;
  EvalPos[24][0] = 0.7745966692414835; EvalPos[24][1] =  0.7745966692414835; EvalPos[24][2] = -0.7745966692414835;
  EvalPos[25][0] = 0.7745966692414835; EvalPos[25][1] =  0.7745966692414835; EvalPos[25][2] =  0.0000000000000000;
  EvalPos[26][0] = 0.7745966692414835; EvalPos[26][1] =  0.7745966692414835; EvalPos[26][2] =  0.7745966692414835;
}

REAL GaussIntegrate(REAL (*Func)(REAL, REAL, REAL), REAL a, REAL b)
{  
  REAL Value = 0.0;
  const REAL fac1 = (b-a)/2.0;
  const REAL fac2 = (a+b)/2.0;
  for(int i=0;i<27;i++)
  {
		REAL xEval = EvalPos[i][0];
		REAL yEval = EvalPos[i][1];
		REAL zEval = EvalPos[i][2];
    Value += weight[i]*Func(fac1*xEval+fac2, fac1*yEval+fac2, fac1*zEval+fac2);
  }
  return fac1*fac1*fac1*Value;
}
